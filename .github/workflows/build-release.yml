name: Build and Release
on:
  push:
    branches:
      - 'dev'
      - 'main'
      - 'ANE-1217'

env:
  DEFAULT_MAVEN_OPTS: >-
    -Xmx3g
    -XX:ReservedCodeCacheSize=1g
    -XX:+UseG1GC
    -Dmaven.test.skip=true
    -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN
    -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=5
    -Dmaven.wagon.http.retryHandler.requestSentEnabled=true
    -Dmaven.wagon.httpconnectionManager.maxPerRoute=5
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=30

jobs:
  build-java17:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'

      - name: get last commit hash
        id: get_nifi_commit_hash
        run: |
          echo "nifi_commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: cache Nifi Toolkit
        uses: actions/cache@v2
        id: cache-nifi-toolkit-assembly
        with:
          path: nifi-toolkit/nifi-toolkit-assembly/target/nifi-toolkit-*-bin.zip
          key: nifi-toolkit-java17-${{ steps.get_nifi_commit_hash.outputs.nifi_commit_hash }}


      - name: cache Nifi Assembly
        uses: actions/cache@v2
        id: cache-nifi-assembly
        with:
          path: nifi-assembly/target/nifi-*-bin.zip
          key: nifi-assembly-java17-${{ steps.get_nifi_commit_hash.outputs.nifi_commit_hash }}

      - name: cache Minifi Assembly
        uses: actions/cache@v2
        id: cache-minifi-assembly
        with:
          path: minifi/minifi-assembly/target/minifi-*-bin.zip
          key: minifi-assembly-java17-${{ steps.get_nifi_commit_hash.outputs.nifi_commit_hash }}

      - name: Build with Maven
        run: |
          mvn clean install -DskipTests

      - name: Create Tag
        if: steps.cache_nifi_toolkit.outputs.cache-hit != 'true' || steps.cache_nifi_assembly.outputs.cache-hit != 'true' || steps.cache_minifi_assembly.outputs.cache-hit != 'true'
        run: |
          git config --local user.email "anetac-prod-action-bot@anetac.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ github.run_number }}"

      - name: Push Tag
        if: env.BUILD_AND_RELEASE == 'true'
        run: |
          git push origin "v${{ github.run_number }}"

      - name: Create Release
        if: steps.cache_nifi_toolkit.outputs.cache-hit != 'true' || steps.cache_nifi_assembly.outputs.cache-hit != 'true' || steps.cache_minifi_assembly.outputs.cache-hit != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.run_number }}-java17"
          files: |
            nifi-assembly/target/nifi-*-bin.zip
            nifi-toolkit/nifi-toolkit-assembly/target/nifi-toolkit-*-bin.zip
            minifi/minifi-assembly/target/minifi-*-bin.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

